services:
  # PostgreSQL Database
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: mwanachuoshop
      POSTGRES_USER: mwanachuouser
      POSTGRES_PASSWORD: mwanachuopass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mwanachuouser -d mwanachuoshop"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Application
  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://mwanachuouser:mwanachuopass@db:5432/mwanachuoshop
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for background tasks
  celery:
    build: .
    command: python manage.py qcluster
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://mwanachuouser:mwanachuopass@db:5432/mwanachuoshop
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Nginx for production (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 