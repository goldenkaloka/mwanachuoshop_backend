openapi: 3.0.3
info:
  title: Mwanachuoshop API
  version: 1.0.0
  description: mwanachuoshop api is an api which will serve as a basis for all mwanachuoshop
    system management
paths:
  /api/attribute-values/:
    get:
      operationId: attribute_values_list
      parameters:
      - in: query
        name: attribute_id
        schema:
          type: integer
      - in: query
        name: category_id
        schema:
          type: integer
      tags:
      - attribute-values
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeValue'
          description: ''
    post:
      operationId: attribute_values_create
      tags:
      - attribute-values
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
  /api/attribute-values/{id}/:
    get:
      operationId: attribute_values_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      tags:
      - attribute-values
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
    put:
      operationId: attribute_values_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      tags:
      - attribute-values
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttributeValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttributeValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
    patch:
      operationId: attribute_values_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      tags:
      - attribute-values
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttributeValue'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
          description: ''
    delete:
      operationId: attribute_values_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute value.
        required: true
      tags:
      - attribute-values
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/attributes/:
    get:
      operationId: attributes_list
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
          description: ''
    post:
      operationId: attributes_create
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attribute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attribute'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
  /api/attributes/{id}/:
    get:
      operationId: attributes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    put:
      operationId: attributes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attribute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attribute'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    patch:
      operationId: attributes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttribute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttribute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttribute'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: ''
    delete:
      operationId: attributes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attribute.
        required: true
      tags:
      - attributes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brands/:
    get:
      operationId: brands_list
      tags:
      - brands
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: brands_create
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/brands/{id}/:
    get:
      operationId: brands_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: brands_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: brands_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: brands_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - brands
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/campuses/:
    get:
      operationId: campuses_list
      description: ViewSet for Campus model - read-only for regular users
      tags:
      - campuses
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campus'
          description: ''
  /api/campuses/{id}/:
    get:
      operationId: campuses_retrieve
      description: ViewSet for Campus model - read-only for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this campus.
        required: true
      tags:
      - campuses
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campus'
          description: ''
  /api/campuses/all/:
    get:
      operationId: campuses_all_retrieve
      description: Get all campuses with coordinates - frontend handles distance calculations
      tags:
      - campuses
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campus'
          description: ''
  /api/campuses/nearby/:
    get:
      operationId: campuses_nearby_retrieve
      description: |-
        Get campuses within a given radius (km) of provided lat/lng.
        Example: /api/campuses/nearby/?lat=-6.8&lng=39.2&radius=20
      tags:
      - campuses
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campus'
          description: ''
  /api/categories/:
    get:
      operationId: categories_list
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/estates/create-estate-payment/:
    post:
      operationId: estates_create_estate_payment_create
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
              examples:
                Success:
                  value:
                    detail: Property activated.
                    property_id: 1
                    is_available: true
                    free_estates_remaining: 4
                DepositRequired:
                  value:
                    error: Insufficient funds
                    detail: Deposit required to activate property.
                    deposit_url: https://example.com/deposit
                    property_id: 1
                    is_available: false
                    free_estates_remaining: 0
                  summary: Deposit Required
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
  /api/estates/properties/:
    get:
      operationId: estates_properties_list
      parameters:
      - in: query
        name: is_available
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: property_type
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyList'
          description: ''
    post:
      operationId: estates_properties_create
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/estates/properties/{id}/:
    get:
      operationId: estates_properties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: estates_properties_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: estates_properties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: estates_properties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/estates/properties/near_university/:
    get:
      operationId: estates_properties_near_university_retrieve
      tags:
      - estates
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/estates/properties/near_user/:
    get:
      operationId: estates_properties_near_user_retrieve
      tags:
      - estates
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/estates/property-images/:
    get:
      operationId: estates_property_images_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyImageList'
          description: ''
    post:
      operationId: estates_property_images_create
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyImage'
          description: ''
  /api/estates/property-images/{id}/:
    get:
      operationId: estates_property_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Image.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyImage'
          description: ''
    put:
      operationId: estates_property_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Image.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyImage'
          description: ''
    patch:
      operationId: estates_property_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Image.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyImage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyImage'
          description: ''
    delete:
      operationId: estates_property_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Image.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/estates/property-types/:
    get:
      operationId: estates_property_types_list
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyType'
          description: ''
    post:
      operationId: estates_property_types_create
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyType'
          description: ''
  /api/estates/property-types/{id}/:
    get:
      operationId: estates_property_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Type.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyType'
          description: ''
    put:
      operationId: estates_property_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Type.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyType'
          description: ''
    patch:
      operationId: estates_property_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Type.
        required: true
      tags:
      - estates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyType'
          description: ''
    delete:
      operationId: estates_property_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property Type.
        required: true
      tags:
      - estates
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payments/create-brand-payment/:
    post:
      operationId: payments_create_brand_payment_create
      description: Create a payment for a brand.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandPaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandPaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandPaymentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandPaymentResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandPaymentResponse'
          description: ''
  /api/payments/create-estate-payment/:
    post:
      operationId: payments_create_estate_payment_create
      description: Create a payment for an estate.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EstatePaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatePaymentResponse'
          description: ''
  /api/payments/create-product-payment/:
    post:
      operationId: payments_create_product_payment_create
      description: Initiate a payment for product activation using wallet.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductPaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductPaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaymentResponse'
              examples:
                Success:
                  value:
                    detail: Product activated.
                    product_id: 1
                    is_active: true
                    free_products_remaining: 4
                AlreadyActive:
                  value:
                    detail: Product already active.
                  summary: Already Active
                Error:
                  value:
                    error: Product ID is required.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaymentResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaymentResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaymentResponse'
          description: ''
  /api/payments/create-shop-subscription-payment/:
    post:
      operationId: payments_create_shop_subscription_payment_create
      description: Initiate a payment for a 1-month shop subscription using wallet.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopSubscriptionPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopSubscriptionPaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopSubscriptionPaymentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSubscriptionPaymentResponse'
              examples:
                Success:
                  value:
                    detail: Subscription activated.
                    shop_id: 1
                    subscription_status: active
                    end_date: '2025-08-01T12:00:00Z'
                AlreadyActive:
                  value:
                    detail: Subscription already active.
                  summary: Already Active
                Error:
                  value:
                    error: Shop ID is required.
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSubscriptionPaymentResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSubscriptionPaymentResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSubscriptionPaymentResponse'
          description: ''
  /api/payments/payments/:
    get:
      operationId: payments_payments_list
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
          description: ''
    post:
      operationId: payments_payments_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/payments/{id}/:
    get:
      operationId: payments_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: payments_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: payments_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: payments_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payments/services/:
    get:
      operationId: payments_services_list
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentService'
          description: ''
  /api/payments/services/{id}/:
    get:
      operationId: payments_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment service.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentService'
          description: ''
  /api/payments/v3/payments/callback/pesapal/:
    get:
      operationId: payments_v3_payments_callback_pesapal_retrieve
      description: Pesapal payment callback endpoint.
      tags:
      - payments
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Pesapal callback received.
    post:
      operationId: payments_v3_payments_callback_pesapal_create
      description: Pesapal payment callback endpoint.
      tags:
      - payments
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Pesapal callback received.
  /api/payments/wallet/:
    get:
      operationId: payments_wallet_list
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'
          description: ''
    post:
      operationId: payments_wallet_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wallet'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
  /api/payments/wallet/{id}/:
    get:
      operationId: payments_wallet_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wallet.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    put:
      operationId: payments_wallet_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wallet.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wallet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    patch:
      operationId: payments_wallet_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wallet.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWallet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
    delete:
      operationId: payments_wallet_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wallet.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payments/wallet/check-payment-status/{transaction_id}/:
    get:
      operationId: payments_wallet_check_payment_status_retrieve
      description: Check the status of a Pesapal v3 payment.
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
  /api/payments/wallet/deposit/:
    post:
      operationId: payments_wallet_deposit_create
      description: Initiate a Pesapal v3 deposit to fund the wallet.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wallet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wallet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: ''
  /api/products/:
    get:
      operationId: products_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/{id}/recent/:
    get:
      operationId: products_recent_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
  /api/products/{product_pk}/images/:
    get:
      operationId: products_images_list
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
          description: ''
    post:
      operationId: products_images_create
      parameters:
      - in: path
        name: product_pk
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/products/category/{category_id}/:
    get:
      operationId: products_category_retrieve
      parameters:
      - in: path
        name: category_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
  /api/products/my_products/:
    get:
      operationId: products_my_products_retrieve
      description: Retrieve the authenticated user's products.
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/near_university/:
    get:
      operationId: products_near_university_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/near_user/:
    get:
      operationId: products_near_user_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/recent/:
    get:
      operationId: products_recent_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
          description: ''
  /api/shops/:
    get:
      operationId: shops_list
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: shops_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/shops/{id}/:
    get:
      operationId: shops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: shops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    patch:
      operationId: shops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: shops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/events/:
    get:
      operationId: shops_events_list
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: shops_events_create
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/shops/events/{id}/:
    get:
      operationId: shops_events_retrieve
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: shops_events_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: shops_events_partial_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: shops_events_destroy
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/my_shop/:
    get:
      operationId: shops_my_shop_retrieve
      description: Retrieve the authenticated user's shop and its subscription status.
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/shops/offers/:
    get:
      operationId: shops_offers_list
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOffer'
          description: ''
  /api/shops/offers/{id}/:
    get:
      operationId: shops_offers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOffer'
          description: ''
  /api/shops/offers/me/:
    get:
      operationId: shops_offers_me_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOffer'
          description: ''
  /api/shops/promotions/:
    get:
      operationId: shops_promotions_list
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
          description: ''
    post:
      operationId: shops_promotions_create
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Promotion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Promotion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
  /api/shops/promotions/{id}/:
    get:
      operationId: shops_promotions_retrieve
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this promotion.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    put:
      operationId: shops_promotions_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this promotion.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Promotion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Promotion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    patch:
      operationId: shops_promotions_partial_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this promotion.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromotion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPromotion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPromotion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    delete:
      operationId: shops_promotions_destroy
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this promotion.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/services/:
    get:
      operationId: shops_services_list
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Services'
          description: ''
    post:
      operationId: shops_services_create
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Services'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Services'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Services'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
  /api/shops/services/{id}/:
    get:
      operationId: shops_services_retrieve
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    put:
      operationId: shops_services_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Services'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Services'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Services'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    patch:
      operationId: shops_services_partial_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServices'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServices'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServices'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    delete:
      operationId: shops_services_destroy
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/shop-media/:
    get:
      operationId: shops_shop_media_list
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopMedia'
          description: ''
    post:
      operationId: shops_shop_media_create
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopMedia'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopMedia'
          description: ''
  /api/shops/shop-media/{id}/:
    get:
      operationId: shops_shop_media_retrieve
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop media.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopMedia'
          description: ''
    put:
      operationId: shops_shop_media_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop media.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopMedia'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopMedia'
          description: ''
    patch:
      operationId: shops_shop_media_partial_update
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop media.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopMedia'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopMedia'
          description: ''
    delete:
      operationId: shops_shop_media_destroy
      description: |-
        A mixin for viewsets whose models have a direct ForeignKey to a Shop.
        - Filters querysets to show only active/public content or content owned by the user.
        - Checks for shop ownership and active subscription on creation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop media.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/shops/subscriptions/:
    get:
      operationId: shops_subscriptions_list
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
  /api/shops/subscriptions/{id}/:
    get:
      operationId: shops_subscriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/shops/subscriptions/{id}/extend/:
    post:
      operationId: shops_subscriptions_extend_create
      description: Extend the subscription duration for the authenticated user's shop
        by 1 month via wallet payment.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/universities/:
    get:
      operationId: universities_list
      description: Simple list endpoint - location logic handled by frontend
      tags:
      - universities
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/University'
          description: ''
  /api/universities/{id}/:
    get:
      operationId: universities_retrieve
      description: ViewSet for University model - read-only for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this University.
        required: true
      tags:
      - universities
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/University'
          description: ''
  /api/universities/{id}/campuses/:
    get:
      operationId: universities_campuses_retrieve
      description: Get all campuses for a specific university
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this University.
        required: true
      tags:
      - universities
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/University'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      description: ViewSet for User model - authenticated access only
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersAppCustomUserDetails'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: ViewSet for User model - authenticated access only
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this new user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAppCustomUserDetails'
          description: ''
  /api/users/auth/login/:
    post:
      operationId: users_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/users/auth/logout/:
    post:
      operationId: users_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/auth/password/change/:
    post:
      operationId: users_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/auth/password/reset/:
    post:
      operationId: users_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/auth/password/reset/confirm/{uidb64}/{token}/:
    post:
      operationId: users_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/auth/profile/:
    get:
      operationId: users_auth_profile_retrieve
      description: View for user profile management
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: users_auth_profile_update
      description: View for user profile management
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: users_auth_profile_partial_update
      description: View for user profile management
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/users/auth/register/:
    post:
      operationId: users_auth_register_create
      description: Custom registration view with location fields
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRegister'
          description: ''
  /api/users/auth/user/:
    get:
      operationId: users_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAppCustomUserDetails'
          description: ''
    put:
      operationId: users_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersAppCustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersAppCustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsersAppCustomUserDetails'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAppCustomUserDetails'
          description: ''
    patch:
      operationId: users_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUsersAppCustomUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUsersAppCustomUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUsersAppCustomUserDetails'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAppCustomUserDetails'
          description: ''
  /api/users/campus/suggestions/:
    get:
      operationId: users_campus_suggestions_retrieve
      description: Get campus suggestions.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampusSuggestionResponse'
          description: ''
  /api/users/get-csrf/:
    get:
      operationId: users_get_csrf_retrieve
      description: Get CSRF token.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRFResponse'
          description: ''
  /api/users/offer/:
    get:
      operationId: users_offer_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOffer'
          description: ''
  /api/users/public/:
    get:
      operationId: users_public_list
      description: Public user discovery endpoint with campus filtering.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicUser'
          description: ''
  /api/users/universities/:
    get:
      operationId: users_universities_list
      description: Simple list endpoint - location logic handled by frontend
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/University'
          description: ''
  /api/users/universities/{id}/:
    get:
      operationId: users_universities_retrieve
      description: ViewSet for University model - read-only for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this University.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/University'
          description: ''
  /api/users/universities/{id}/campuses/:
    get:
      operationId: users_universities_campuses_retrieve
      description: Get all campuses for a specific university
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this University.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/University'
          description: ''
  /api/whatsapp-click/:
    post:
      operationId: whatsapp_click_create
      description: Track WhatsApp click for a product.
      tags:
      - whatsapp-click
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppClickRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WhatsAppClickRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WhatsAppClickRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppClickResponse'
          description: ''
components:
  schemas:
    Attribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    AttributeValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute:
          allOf:
          - $ref: '#/components/schemas/Attribute'
          readOnly: true
        attribute_id:
          type: integer
          writeOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        value:
          type: string
          maxLength: 100
      required:
      - attribute
      - attribute_id
      - category
      - category_id
      - id
      - value
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        category_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        logo:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
        is_active:
          type: boolean
      required:
      - categories
      - created_by
      - id
      - name
    BrandPaymentRequest:
      type: object
      properties:
        brand_id:
          type: integer
      required:
      - brand_id
    BrandPaymentResponse:
      type: object
      properties:
        detail:
          type: string
        brand_id:
          type: integer
        is_active:
          type: boolean
        free_brands_remaining:
          type: integer
        error:
          type: string
    CSRFResponse:
      type: object
      properties:
        csrfToken:
          type: string
      required:
      - csrfToken
    Campus:
      type: object
      description: Simple serializer for Campus model - raw data with coordinates
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        university:
          type: integer
        university_name:
          type: string
          readOnly: true
        university_short_name:
          type: string
          readOnly: true
        latitude:
          type: string
          readOnly: true
        longitude:
          type: string
          readOnly: true
        address:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - latitude
      - longitude
      - name
      - university
      - university_name
      - university_short_name
      - updated_at
    CampusSuggestionResponse:
      type: object
      properties:
        suggestions:
          type: array
          items:
            type: string
      required:
      - suggestions
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        parent:
          type: integer
          writeOnly: true
          nullable: true
        parent_name:
          type: string
          readOnly: true
          nullable: true
        children:
          type: array
          items:
            type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
      required:
      - children
      - id
      - is_active
      - name
      - parent_name
    ConditionEnum:
      enum:
      - new
      - used
      type: string
      description: |-
        * `new` - New
        * `used` - Used
    CustomRegister:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        phonenumber:
          type: string
      required:
      - email
      - password1
      - password2
      - phonenumber
      - username
    EstatePaymentRequest:
      type: object
      properties:
        property_id:
          type: integer
      required:
      - property_id
    EstatePaymentResponse:
      type: object
      properties:
        detail:
          type: string
        property_id:
          type: integer
        is_available:
          type: boolean
        free_estates_remaining:
          type: integer
        deposit_url:
          type: string
        error:
          type: string
      required:
      - detail
      - is_available
      - property_id
    EstatesAppCustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        phonenumber:
          type: string
          readOnly: true
        profile_id:
          type: integer
          readOnly: true
        whatsapp:
          type: string
          readOnly: true
          nullable: true
        profile_image:
          type: string
          format: uri
          readOnly: true
          nullable: true
      required:
      - email
      - phonenumber
      - pk
      - profile_id
      - profile_image
      - whatsapp
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        is_free:
          type: boolean
        ticket_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: string
          readOnly: true
      required:
      - created_at
      - description
      - end_time
      - id
      - is_active
      - shop
      - start_time
      - title
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/UsersAppCustomUserDetails'
      required:
      - access
      - refresh
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    NameEnum:
      enum:
      - shop_subscription
      - brand_creation
      type: string
      description: |-
        * `shop_subscription` - Shop Subscription
        * `brand_creation` - Brand Creation
    NullEnum:
      enum:
      - null
    PaginatedProductList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedPropertyImageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyImage'
    PaginatedPropertyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    PasswordChange:
      type: object
      properties:
        old_password:
          type: string
          maxLength: 128
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
      - old_password
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedAttribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedAttributeValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute:
          allOf:
          - $ref: '#/components/schemas/Attribute'
          readOnly: true
        attribute_id:
          type: integer
          writeOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        value:
          type: string
          maxLength: 100
    PatchedBrand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        category_ids:
          type: array
          items:
            type: integer
          writeOnly: true
        logo:
          type: string
          format: uri
          nullable: true
        created_by:
          type: integer
        is_active:
          type: boolean
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        parent:
          type: integer
          writeOnly: true
          nullable: true
        parent_name:
          type: string
          readOnly: true
          nullable: true
        children:
          type: array
          items:
            type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        is_free:
          type: boolean
        ticket_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: string
          readOnly: true
    PatchedPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/PaymentService'
          readOnly: true
        service_id:
          type: integer
          writeOnly: true
          nullable: true
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        user:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        date_added:
          type: string
          format: date-time
          readOnly: true
        transaction_id:
          type: string
          readOnly: true
          nullable: true
        external_id:
          type: string
          readOnly: true
          nullable: true
        provider:
          type: string
          nullable: true
          maxLength: 50
        account_number:
          type: string
          nullable: true
          maxLength: 20
        content_type:
          type: integer
          nullable: true
        object_id:
          type: integer
          nullable: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        brand_id:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          writeOnly: true
        campus:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        images_upload:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
          description: Upload multiple images at once.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        attribute_value_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
          readOnly: true
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UsersAppCustomUserDetails'
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        instagram:
          type: string
          nullable: true
          maxLength: 100
        tiktok:
          type: string
          nullable: true
          maxLength: 100
        facebook:
          type: string
          nullable: true
          maxLength: 100
        campuses:
          type: array
          items:
            type: integer
    PatchedPromotion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        title:
          type: string
          maxLength: 100
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: string
          readOnly: true
    PatchedProperty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/EstatesAppCustomUserDetails'
          readOnly: true
        property_type:
          allOf:
          - $ref: '#/components/schemas/PropertyType'
          readOnly: true
        property_type_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        features:
          type: string
        location:
          type: string
          description: Geographical location of the property.
          maxLength: 100
        campus:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          description: Price of the property in TZS.
        is_available:
          type: boolean
          description: Indicates if the property is active and visible to users.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/PropertyImage'
          readOnly: true
        images_upload:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
          description: Upload multiple images at once.
    PatchedPropertyImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        property:
          type: integer
        image:
          type: string
          format: uri
        is_primary:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPropertyType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
    PatchedServices:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_available:
          type: string
          readOnly: true
    PatchedShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 128
        campus:
          type: integer
          nullable: true
        description:
          type: string
        operating_hours: {}
        social_media:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        services:
          type: array
          items:
            $ref: '#/components/schemas/Services'
          readOnly: true
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Promotion'
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/ShopMedia'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        is_subscription_active:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        subscription_warning:
          type: string
          nullable: true
          readOnly: true
    PatchedShopMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        is_primary:
          type: boolean
    PatchedUsersAppCustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phonenumber:
          type: string
          maxLength: 128
        profile_id:
          type: integer
          readOnly: true
          nullable: true
        profile_image:
          type: string
          nullable: true
          readOnly: true
    PatchedWallet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/PaymentService'
          readOnly: true
        service_id:
          type: integer
          writeOnly: true
          nullable: true
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        user:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        date_added:
          type: string
          format: date-time
          readOnly: true
        transaction_id:
          type: string
          readOnly: true
          nullable: true
        external_id:
          type: string
          readOnly: true
          nullable: true
        provider:
          type: string
          nullable: true
          maxLength: 50
        account_number:
          type: string
          nullable: true
          maxLength: 20
        content_type:
          type: integer
          nullable: true
        object_id:
          type: integer
          nullable: true
      required:
      - amount
      - date_added
      - external_id
      - id
      - service
      - status
      - transaction_id
      - user
    PaymentService:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - id
      - name
      - price
    PaymentStatusEnum:
      enum:
      - pending
      - completed
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `failed` - Failed
    PaymentTypeEnum:
      enum:
      - product
      - estate
      - subscription
      - brand
      - deposit
      type: string
      description: |-
        * `product` - Product Activation
        * `estate` - Estate Activation
        * `subscription` - Shop Subscription
        * `brand` - Brand Creation
        * `deposit` - Wallet Deposit
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        brand_id:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          writeOnly: true
        campus:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        images_upload:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
          description: Upload multiple images at once.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        attribute_value_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
          readOnly: true
      required:
      - attribute_value_ids
      - attribute_values
      - brand_id
      - category_id
      - created_at
      - description
      - id
      - images
      - is_active
      - name
      - price
      - updated_at
    ProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        category:
          type: string
        brand:
          type: string
        price:
          type: number
          format: double
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImageUrl'
          readOnly: true
        attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/UsersAppCustomUserDetails'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        condition:
          type: string
        campus:
          type: string
          readOnly: true
          nullable: true
      required:
      - attribute_values
      - brand
      - campus
      - category
      - condition
      - created_at
      - description
      - id
      - images
      - name
      - owner
      - price
      - updated_at
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        is_primary:
          type: boolean
      required:
      - id
      - image
      - product
    ProductImageUrl:
      type: object
      properties:
        image:
          type: string
          format: uri
        is_primary:
          type: boolean
      required:
      - image
    ProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        category:
          type: string
        brand:
          type: string
        price:
          type: number
          format: double
        image_url:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        condition:
          type: string
        campus:
          type: string
          readOnly: true
          nullable: true
      required:
      - brand
      - campus
      - category
      - condition
      - created_at
      - id
      - image_url
      - name
      - price
    ProductPaymentRequest:
      type: object
      properties:
        product_id:
          type: integer
      required:
      - product_id
    ProductPaymentResponse:
      type: object
      properties:
        detail:
          type: string
        product_id:
          type: integer
        is_active:
          type: boolean
        free_products_remaining:
          type: integer
        error:
          type: string
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UsersAppCustomUserDetails'
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        instagram:
          type: string
          nullable: true
          maxLength: 100
        tiktok:
          type: string
          nullable: true
          maxLength: 100
        facebook:
          type: string
          nullable: true
          maxLength: 100
        campuses:
          type: array
          items:
            type: integer
      required:
      - id
      - user
    Promotion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        title:
          type: string
          maxLength: 100
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: string
          readOnly: true
      required:
      - created_at
      - description
      - end_date
      - id
      - is_active
      - shop
      - start_date
      - title
    Property:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/EstatesAppCustomUserDetails'
          readOnly: true
        property_type:
          allOf:
          - $ref: '#/components/schemas/PropertyType'
          readOnly: true
        property_type_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        features:
          type: string
        location:
          type: string
          description: Geographical location of the property.
          maxLength: 100
        campus:
          type: array
          items:
            type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          description: Price of the property in TZS.
        is_available:
          type: boolean
          description: Indicates if the property is active and visible to users.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/PropertyImage'
          readOnly: true
        images_upload:
          type: array
          items:
            type: string
            format: uri
          writeOnly: true
          description: Upload multiple images at once.
      required:
      - created_at
      - features
      - id
      - images
      - owner
      - price
      - property_type
      - property_type_id
      - slug
      - title
      - updated_at
    PropertyImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        property:
          type: integer
        image:
          type: string
          format: uri
        is_primary:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - image
      - property
    PropertyType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    PublicUser:
      type: object
      description: Serializer for public user discovery - only exposes safe fields
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        university_names:
          type: array
          items:
            type: string
          readOnly: true
        university_short_names:
          type: array
          items:
            type: string
          readOnly: true
        campus_names:
          type: array
          items:
            type: string
          readOnly: true
        profile_image:
          type: string
          nullable: true
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - campus_names
      - id
      - profile_image
      - start_date
      - university_names
      - university_short_names
      - username
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Services:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_available:
          type: string
          readOnly: true
      required:
      - created_at
      - description
      - duration
      - id
      - is_available
      - name
      - price
      - shop
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 128
        campus:
          type: integer
          nullable: true
        description:
          type: string
        operating_hours: {}
        social_media:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        services:
          type: array
          items:
            $ref: '#/components/schemas/Services'
          readOnly: true
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Promotion'
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/ShopMedia'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        is_subscription_active:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        subscription_warning:
          type: string
          nullable: true
          readOnly: true
      required:
      - created_at
      - description
      - events
      - id
      - is_subscription_active
      - media
      - name
      - phone
      - promotions
      - services
      - subscription
      - subscription_warning
      - updated_at
      - user
    ShopMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        is_primary:
          type: boolean
      required:
      - id
      - shop
    ShopSubscriptionPaymentRequest:
      type: object
      properties:
        shop_id:
          type: integer
      required:
      - shop_id
    ShopSubscriptionPaymentResponse:
      type: object
      properties:
        detail:
          type: string
        shop_id:
          type: integer
        subscription_status:
          type: string
        end_date:
          type: string
          format: date-time
        error:
          type: string
    Subscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
        is_trial:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: string
          readOnly: true
      required:
      - created_at
      - end_date
      - id
      - is_active
      - start_date
    SubscriptionStatusEnum:
      enum:
      - active
      - expired
      - canceled
      type: string
      description: |-
        * `active` - Active
        * `expired` - Expired
        * `canceled` - Canceled
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    University:
      type: object
      description: Simple serializer for University model - raw data only
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        short_name:
          type: string
          maxLength: 50
        radius_km:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Radius in kilometers to consider as 'near' this university
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - short_name
      - updated_at
    UserOffer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        free_products_remaining:
          type: integer
          maximum: 2147483647
          minimum: 0
        free_estates_remaining:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    UsersAppCustomUserDetails:
      type: object
      description: User model w/o password
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phonenumber:
          type: string
          maxLength: 128
        profile_id:
          type: integer
          readOnly: true
          nullable: true
        profile_image:
          type: string
          nullable: true
          readOnly: true
      required:
      - email
      - id
      - phonenumber
      - profile_id
      - profile_image
      - username
    Wallet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
      - user
    WhatsAppClickRequest:
      type: object
      properties:
        product_id:
          type: integer
        message:
          type: string
      required:
      - message
      - product_id
    WhatsAppClickResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
